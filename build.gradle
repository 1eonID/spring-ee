buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
	}
}

plugins {
	id 'org.asciidoctor.convert' version '1.5.3'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

group = 'springee'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
	compile 'org.hibernate:hibernate-java8'
	compile 'org.springframework.retry:spring-retry'
	compile group: 'com.google.guava', name: 'guava', version: '23.6-jre'
	compile 'org.springframework.boot:spring-boot-starter-security'

	compile('org.springframework.boot:spring-boot-starter-data-jpa')

	runtime('com.h2database:h2')
	runtime('org.postgresql:postgresql')

	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:1.2.1.RELEASE'
}

bootRun {
	systemProperty 'spring.profiles.active', 'prod'
}

test {
	outputs.dir file("build/generated-snippets")
}

asciidoctor {
	dependsOn test
	backends = ['html5']
	options doctype: 'book'

	attributes = [
			'source-highlighter': 'highlightjs',
			'imagesdir'         : './images',
			'toc'               : 'left',
			'toclevels'         : 3,
			'numbered'          : '',
			'icons'             : 'font',
			'setanchors'        : '',
			'idprefix'          : '',
			'idseparator'       : '-',
			'docinfo1'          : '',
			'safe-mode-unsafe'  : '',
			'allow-uri-read'    : '',
			'snippets'          : file("build/generated-snippets"),
			linkattrs           : true,
			encoding            : 'utf-8',
	]

	inputs.dir file("build/generated-snippets")
	outputDir 'build/asciidoc'
	sourceDir 'src/docs/asciidoc'
	sources {
		include 'index.adoc'
	}
}

build{
	dependsOn asciidoctor
}
